{{- define "app.secret" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .name }}
  labels:
    {{- include "app.labels" .root | nindent 4 }}
    {{- with .labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
type: {{ .type | default "Opaque" }}
{{- with .data }}
data:
  {{- toYaml . | nindent 2 }}
{{- end }}
{{- with .stringData }}
stringData:
  {{- toYaml . | nindent 2 }}
{{- end }}
{{- end }}

{{/* Common Secret: Shared secrets across all deployments */}}
{{- if and (hasKey .Values.common "secret") .Values.common.secret (hasKey .Values.common.secret "enabled") .Values.common.secret.enabled }}
{{- $secretName := "" }}
{{- if .Values.common.secret.name }}
  {{- $secretName = printf "%s-%s" .Release.Name .Values.common.secret.name }}
{{- else }}
  {{- $secretName = include "app.secretName" (list . "common") }}
{{- end }}
{{- $context := dict "root" . "name" $secretName "labels" .Values.common.secret.labels "annotations" .Values.common.secret.annotations "type" .Values.common.secret.type "data" .Values.common.secret.data "stringData" .Values.common.secret.stringData }}
{{- include "app.secret" $context }}
{{- end }}

{{/* Deployment-specific Secrets: Secrets for individual deployments */}}
{{- range $name, $deployment := .Values.deployments }}
{{- if and $deployment.enabled (hasKey $deployment "secret") $deployment.secret (hasKey $deployment.secret "enabled") $deployment.secret.enabled }}
---
{{- $secretName := "" }}
{{- if $deployment.secret.name }}
  {{- $secretName = printf "%s-%s" $.Release.Name $deployment.secret.name }}
{{- else }}
  {{- $secretName = include "app.secretName" (list $ $name) }}
{{- end }}
{{- $context := dict "root" $ "name" $secretName "labels" $deployment.secret.labels "annotations" $deployment.secret.annotations "type" $deployment.secret.type "data" $deployment.secret.data "stringData" $deployment.secret.stringData }}
{{- include "app.secret" $context }}
{{- end }}
{{- end }}

{{/* Extra Secrets: Additional secret resources (e.g., TLS certificates, API keys) */}}
{{- range $name, $secret := .Values.extraSecrets }}
{{- if and (hasKey $secret "enabled") $secret.enabled }}
---
{{- $secretName := "" }}
{{- if $secret.name }}
  {{- $secretName = printf "%s-%s" $.Release.Name $secret.name }}
{{- else }}
  {{- $secretName = include "app.secretName" (list $ $name) }}
{{- end }}
{{- $context := dict "root" $ "name" $secretName "labels" $secret.labels "annotations" $secret.annotations "type" $secret.type "data" $secret.data "stringData" $secret.stringData }}
{{- include "app.secret" $context }}
{{- end }}
{{- end }}